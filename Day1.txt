Lab 4 - Write one interface -> with method m1, m2, m3
	Write two implementation classes and  a main class to invoke these methods.
	Modify m2 from interface to make it default with some code. 
	Run -> Check, no impact of default
	Modify one implementation class to delete m2 definition and check (see default of interface)

	Same way modify m3 as static and see impact
	watch errors and rectify


Lab3 - Convert following code to lambda 
	package old;

	import java.util.Scanner;

	class Simple implements Runnable 
	{
		@Override
		public void run() {
				System.out.println("in run of Simple");
				try { 			Thread.sleep(3000); 			} catch (InterruptedException e) { 				e.printStackTrace(); 			}
		}
	}

	public class Lab3 {

		public static void main(String[] args) {
			System.out.println("Enter a number to continue..");
			Scanner scanner = new Scanner(System.in);
			scanner.nextInt();

			System.out.println("start of main......");
			Thread t1 = new Thread(new Simple());
			t1.start();
			System.out.println("end of main......");

		}

	}


Lab 2 - Create a java class
	import java.util.ArrayList;
	import java.util.List;
	import java.util.Scanner;

	public class Lab2 {
		public static void main(String[] args) throws Exception {
			System.out.println("Enter a number to continue..");
			Scanner scanner = new Scanner(System.in);
			scanner.nextInt();

			for(int i =0; i< 30000;i++){
				List<String> list = new ArrayList<>();
				for(int j =0; j< 30000;j++){
					list.add(" str " + j);
				}
				Thread.sleep(100);
			}

		}
	}

Command prompt -> jconsole, jvisualvm
------------------------------------------
Lab 1 - Create a java class 
	import java.util.Date;

	public class Lab1 {

		public static void main(String[] args) {
			// TODO Auto-generated method stub
				System.out.println("..................Hello World................... ");
				Date d1 = new Date();
				}
		}

	Command prompt(set path=jdk\bin)
		java -verbose:class Lab1
			Observe class Loading 
